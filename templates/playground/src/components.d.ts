/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { DeckdeckgoPlaygroundTheme } from "./declarations/deckdeckgo-playground-theme";
export namespace Components {
    interface DeckgoPlayground {
        "allowFullscreen": boolean;
        "frameTitle": string;
        "height": number;
        "instant": boolean;
        "lazyLoadContent": () => Promise<void>;
        "src": string;
        "theme": DeckdeckgoPlaygroundTheme;
        "width": number;
    }
    interface DeckgoSlidePlayground {
        "afterSwipe": () => Promise<void>;
        /**
          * Allow toggle to fullscreen
         */
        "allowFullscreen": boolean;
        "beforeSwipe": (_enter: boolean, _reveal: boolean) => Promise<boolean>;
        /**
          * If you provide actions for the all deck but, a specific one for this slide, set this option to true
         */
        "customActions": boolean;
        /**
          * If you define a background for the all deck but, a specific one for this slide, set this option to true
         */
        "customBackground": boolean;
        /**
          * Per default the playground height will be calculated according the content size available. Using this option you would be able to define your own height.
         */
        "height": number;
        "hideContent": () => Promise<void>;
        "lazyLoadContent": () => Promise<void>;
        "resizeContent": () => Promise<void>;
        "revealContent": () => Promise<void>;
        /**
          * The full link to your Pen, Fiddle oder WebComponents.dev. The component will take care of converting the link to an embeddable one
         */
        "src": string;
        /**
          * The theming option if it can be applied respectivelly if supported by the third party playground, otherwise, 'default'
         */
        "theme": DeckdeckgoPlaygroundTheme;
        /**
          * Per default the playground width will be calculated according the content size available. Using this option you would be able to define your own width.
         */
        "width": number;
    }
}
declare global {
    interface HTMLDeckgoPlaygroundElement extends Components.DeckgoPlayground, HTMLStencilElement {
    }
    var HTMLDeckgoPlaygroundElement: {
        prototype: HTMLDeckgoPlaygroundElement;
        new (): HTMLDeckgoPlaygroundElement;
    };
    interface HTMLDeckgoSlidePlaygroundElement extends Components.DeckgoSlidePlayground, HTMLStencilElement {
    }
    var HTMLDeckgoSlidePlaygroundElement: {
        prototype: HTMLDeckgoSlidePlaygroundElement;
        new (): HTMLDeckgoSlidePlaygroundElement;
    };
    interface HTMLElementTagNameMap {
        "deckgo-playground": HTMLDeckgoPlaygroundElement;
        "deckgo-slide-playground": HTMLDeckgoSlidePlaygroundElement;
    }
}
declare namespace LocalJSX {
    interface DeckgoPlayground {
        "allowFullscreen"?: boolean;
        "frameTitle"?: string;
        "height"?: number;
        "instant"?: boolean;
        "src"?: string;
        "theme"?: DeckdeckgoPlaygroundTheme;
        "width"?: number;
    }
    interface DeckgoSlidePlayground {
        /**
          * Allow toggle to fullscreen
         */
        "allowFullscreen"?: boolean;
        /**
          * If you provide actions for the all deck but, a specific one for this slide, set this option to true
         */
        "customActions"?: boolean;
        /**
          * If you define a background for the all deck but, a specific one for this slide, set this option to true
         */
        "customBackground"?: boolean;
        /**
          * Per default the playground height will be calculated according the content size available. Using this option you would be able to define your own height.
         */
        "height"?: number;
        /**
          * Triggered when the slide is loaded
         */
        "onSlideDidLoad"?: (event: CustomEvent<void>) => void;
        /**
          * The full link to your Pen, Fiddle oder WebComponents.dev. The component will take care of converting the link to an embeddable one
         */
        "src"?: string;
        /**
          * The theming option if it can be applied respectivelly if supported by the third party playground, otherwise, 'default'
         */
        "theme"?: DeckdeckgoPlaygroundTheme;
        /**
          * Per default the playground width will be calculated according the content size available. Using this option you would be able to define your own width.
         */
        "width"?: number;
    }
    interface IntrinsicElements {
        "deckgo-playground": DeckgoPlayground;
        "deckgo-slide-playground": DeckgoSlidePlayground;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "deckgo-playground": LocalJSX.DeckgoPlayground & JSXBase.HTMLAttributes<HTMLDeckgoPlaygroundElement>;
            "deckgo-slide-playground": LocalJSX.DeckgoSlidePlayground & JSXBase.HTMLAttributes<HTMLDeckgoSlidePlaygroundElement>;
        }
    }
}
