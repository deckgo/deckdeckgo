/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@deckdeckgo/core';
import '@ionic/core';
import 'ionicons';
import {
  DeckdeckgoSlideDefinition,
} from '@deckdeckgo/types';


export namespace Components {

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface AppAccelerometer {
    'hide': boolean;
  }
  interface AppAccelerometerAttributes extends StencilHTMLAttributes {
    'hide'?: boolean;
  }

  interface AppDraw {
    'height': number;
    'heightOffset': number;
    'moveDraw': (leftOffset: number, transitionDuration: string) => Promise<void>;
    'slides': number;
    'width': number;
  }
  interface AppDrawAttributes extends StencilHTMLAttributes {
    'height'?: number;
    'heightOffset'?: number;
    'onDrawing'?: (event: CustomEvent<boolean>) => void;
    'slides'?: number;
    'width'?: number;
  }

  interface AppStopwatchTime {}
  interface AppStopwatchTimeAttributes extends StencilHTMLAttributes {}

  interface AppStopwatch {
    'length': number;
    'remaining': number;
  }
  interface AppStopwatchAttributes extends StencilHTMLAttributes {
    'length'?: number;
    'remaining'?: number;
  }

  interface AppRemoteConnect {}
  interface AppRemoteConnectAttributes extends StencilHTMLAttributes {}

  interface AppRemoteSettings {}
  interface AppRemoteSettingsAttributes extends StencilHTMLAttributes {}

  interface AppRemoteSlidePicker {
    'slides': DeckdeckgoSlideDefinition[];
  }
  interface AppRemoteSlidePickerAttributes extends StencilHTMLAttributes {
    'slides'?: DeckdeckgoSlideDefinition[];
  }

  interface AppAbout {}
  interface AppAboutAttributes extends StencilHTMLAttributes {}

  interface AppRemote {
    'room': string;
  }
  interface AppRemoteAttributes extends StencilHTMLAttributes {
    'room'?: string;
  }

  interface AppTabs {}
  interface AppTabsAttributes extends StencilHTMLAttributes {}

  interface AppTimer {}
  interface AppTimerAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AppRoot': Components.AppRoot;
    'AppAccelerometer': Components.AppAccelerometer;
    'AppDraw': Components.AppDraw;
    'AppStopwatchTime': Components.AppStopwatchTime;
    'AppStopwatch': Components.AppStopwatch;
    'AppRemoteConnect': Components.AppRemoteConnect;
    'AppRemoteSettings': Components.AppRemoteSettings;
    'AppRemoteSlidePicker': Components.AppRemoteSlidePicker;
    'AppAbout': Components.AppAbout;
    'AppRemote': Components.AppRemote;
    'AppTabs': Components.AppTabs;
    'AppTimer': Components.AppTimer;
  }

  interface StencilIntrinsicElements {
    'app-root': Components.AppRootAttributes;
    'app-accelerometer': Components.AppAccelerometerAttributes;
    'app-draw': Components.AppDrawAttributes;
    'app-stopwatch-time': Components.AppStopwatchTimeAttributes;
    'app-stopwatch': Components.AppStopwatchAttributes;
    'app-remote-connect': Components.AppRemoteConnectAttributes;
    'app-remote-settings': Components.AppRemoteSettingsAttributes;
    'app-remote-slide-picker': Components.AppRemoteSlidePickerAttributes;
    'app-about': Components.AppAboutAttributes;
    'app-remote': Components.AppRemoteAttributes;
    'app-tabs': Components.AppTabsAttributes;
    'app-timer': Components.AppTimerAttributes;
  }


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppAccelerometerElement extends Components.AppAccelerometer, HTMLStencilElement {}
  var HTMLAppAccelerometerElement: {
    prototype: HTMLAppAccelerometerElement;
    new (): HTMLAppAccelerometerElement;
  };

  interface HTMLAppDrawElement extends Components.AppDraw, HTMLStencilElement {}
  var HTMLAppDrawElement: {
    prototype: HTMLAppDrawElement;
    new (): HTMLAppDrawElement;
  };

  interface HTMLAppStopwatchTimeElement extends Components.AppStopwatchTime, HTMLStencilElement {}
  var HTMLAppStopwatchTimeElement: {
    prototype: HTMLAppStopwatchTimeElement;
    new (): HTMLAppStopwatchTimeElement;
  };

  interface HTMLAppStopwatchElement extends Components.AppStopwatch, HTMLStencilElement {}
  var HTMLAppStopwatchElement: {
    prototype: HTMLAppStopwatchElement;
    new (): HTMLAppStopwatchElement;
  };

  interface HTMLAppRemoteConnectElement extends Components.AppRemoteConnect, HTMLStencilElement {}
  var HTMLAppRemoteConnectElement: {
    prototype: HTMLAppRemoteConnectElement;
    new (): HTMLAppRemoteConnectElement;
  };

  interface HTMLAppRemoteSettingsElement extends Components.AppRemoteSettings, HTMLStencilElement {}
  var HTMLAppRemoteSettingsElement: {
    prototype: HTMLAppRemoteSettingsElement;
    new (): HTMLAppRemoteSettingsElement;
  };

  interface HTMLAppRemoteSlidePickerElement extends Components.AppRemoteSlidePicker, HTMLStencilElement {}
  var HTMLAppRemoteSlidePickerElement: {
    prototype: HTMLAppRemoteSlidePickerElement;
    new (): HTMLAppRemoteSlidePickerElement;
  };

  interface HTMLAppAboutElement extends Components.AppAbout, HTMLStencilElement {}
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };

  interface HTMLAppRemoteElement extends Components.AppRemote, HTMLStencilElement {}
  var HTMLAppRemoteElement: {
    prototype: HTMLAppRemoteElement;
    new (): HTMLAppRemoteElement;
  };

  interface HTMLAppTabsElement extends Components.AppTabs, HTMLStencilElement {}
  var HTMLAppTabsElement: {
    prototype: HTMLAppTabsElement;
    new (): HTMLAppTabsElement;
  };

  interface HTMLAppTimerElement extends Components.AppTimer, HTMLStencilElement {}
  var HTMLAppTimerElement: {
    prototype: HTMLAppTimerElement;
    new (): HTMLAppTimerElement;
  };

  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement
    'app-accelerometer': HTMLAppAccelerometerElement
    'app-draw': HTMLAppDrawElement
    'app-stopwatch-time': HTMLAppStopwatchTimeElement
    'app-stopwatch': HTMLAppStopwatchElement
    'app-remote-connect': HTMLAppRemoteConnectElement
    'app-remote-settings': HTMLAppRemoteSettingsElement
    'app-remote-slide-picker': HTMLAppRemoteSlidePickerElement
    'app-about': HTMLAppAboutElement
    'app-remote': HTMLAppRemoteElement
    'app-tabs': HTMLAppTabsElement
    'app-timer': HTMLAppTimerElement
  }

  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'app-accelerometer': HTMLAppAccelerometerElement;
    'app-draw': HTMLAppDrawElement;
    'app-stopwatch-time': HTMLAppStopwatchTimeElement;
    'app-stopwatch': HTMLAppStopwatchElement;
    'app-remote-connect': HTMLAppRemoteConnectElement;
    'app-remote-settings': HTMLAppRemoteSettingsElement;
    'app-remote-slide-picker': HTMLAppRemoteSlidePickerElement;
    'app-about': HTMLAppAboutElement;
    'app-remote': HTMLAppRemoteElement;
    'app-tabs': HTMLAppTabsElement;
    'app-timer': HTMLAppTimerElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
